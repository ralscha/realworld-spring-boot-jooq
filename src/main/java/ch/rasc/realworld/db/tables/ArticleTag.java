/*
 * This file is generated by jOOQ.
 */
package ch.rasc.realworld.db.tables;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ch.rasc.realworld.db.DefaultSchema;
import ch.rasc.realworld.db.Indexes;
import ch.rasc.realworld.db.Keys;
import ch.rasc.realworld.db.tables.records.ArticleTagRecord;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.11.11" },
		comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleTag extends TableImpl<ArticleTagRecord> {

	private static final long serialVersionUID = -2010406117;

	/**
	 * The reference instance of <code>ARTICLE_TAG</code>
	 */
	public static final ArticleTag ARTICLE_TAG = new ArticleTag();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ArticleTagRecord> getRecordType() {
		return ArticleTagRecord.class;
	}

	/**
	 * The column <code>ARTICLE_TAG.ARTICLE_ID</code>.
	 */
	public final TableField<ArticleTagRecord, Long> ARTICLE_ID = createField("ARTICLE_ID",
			org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>ARTICLE_TAG.TAG_ID</code>.
	 */
	public final TableField<ArticleTagRecord, Long> TAG_ID = createField("TAG_ID",
			org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>ARTICLE_TAG</code> table reference
	 */
	public ArticleTag() {
		this(DSL.name("ARTICLE_TAG"), null);
	}

	/**
	 * Create an aliased <code>ARTICLE_TAG</code> table reference
	 */
	public ArticleTag(String alias) {
		this(DSL.name(alias), ARTICLE_TAG);
	}

	/**
	 * Create an aliased <code>ARTICLE_TAG</code> table reference
	 */
	public ArticleTag(Name alias) {
		this(alias, ARTICLE_TAG);
	}

	private ArticleTag(Name alias, Table<ArticleTagRecord> aliased) {
		this(alias, aliased, null);
	}

	private ArticleTag(Name alias, Table<ArticleTagRecord> aliased,
			Field<?>[] parameters) {
		super(alias, null, aliased, parameters, DSL.comment(""));
	}

	public <O extends Record> ArticleTag(Table<O> child,
			ForeignKey<O, ArticleTagRecord> key) {
		super(child, key, ARTICLE_TAG);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Schema getSchema() {
		return DefaultSchema.DEFAULT_SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Index> getIndexes() {
		return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_B1,
				Indexes.CONSTRAINT_INDEX_B12, Indexes.PRIMARY_KEY_B1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ArticleTagRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_B1;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ArticleTagRecord>> getKeys() {
		return Arrays.<UniqueKey<ArticleTagRecord>>asList(Keys.CONSTRAINT_B1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ArticleTagRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ArticleTagRecord, ?>>asList(Keys.CONSTRAINT_B12,
				Keys.CONSTRAINT_B12C);
	}

	public Article article() {
		return new Article(this, Keys.CONSTRAINT_B12);
	}

	public Tag tag() {
		return new Tag(this, Keys.CONSTRAINT_B12C);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleTag as(String alias) {
		return new ArticleTag(DSL.name(alias), this);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ArticleTag as(Name alias) {
		return new ArticleTag(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public ArticleTag rename(String name) {
		return new ArticleTag(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public ArticleTag rename(Name name) {
		return new ArticleTag(name, null);
	}
}
