/*
 * This file is generated by jOOQ.
 */
package ch.rasc.realworld.db.tables.records;


import ch.rasc.realworld.db.tables.ArticleTag;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleTagRecord extends UpdatableRecordImpl<ArticleTagRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>article_tag.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>article_tag.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>article_tag.article_id</code>.
     */
    public void setArticleId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>article_tag.article_id</code>.
     */
    public Long getArticleId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>article_tag.tag_id</code>.
     */
    public void setTagId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>article_tag.tag_id</code>.
     */
    public Long getTagId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ArticleTag.ARTICLE_TAG.ID;
    }

    @Override
    public Field<Long> field2() {
        return ArticleTag.ARTICLE_TAG.ARTICLE_ID;
    }

    @Override
    public Field<Long> field3() {
        return ArticleTag.ARTICLE_TAG.TAG_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getArticleId();
    }

    @Override
    public Long component3() {
        return getTagId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getArticleId();
    }

    @Override
    public Long value3() {
        return getTagId();
    }

    @Override
    public ArticleTagRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ArticleTagRecord value2(Long value) {
        setArticleId(value);
        return this;
    }

    @Override
    public ArticleTagRecord value3(Long value) {
        setTagId(value);
        return this;
    }

    @Override
    public ArticleTagRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArticleTagRecord
     */
    public ArticleTagRecord() {
        super(ArticleTag.ARTICLE_TAG);
    }

    /**
     * Create a detached, initialised ArticleTagRecord
     */
    public ArticleTagRecord(Long id, Long articleId, Long tagId) {
        super(ArticleTag.ARTICLE_TAG);

        setId(id);
        setArticleId(articleId);
        setTagId(tagId);
    }
}
